upstream frontend {                                                                
    server localhost:3000;                                   
}                                                                  
                                                     
upstream backend {                                                                 
    server localhost:8080;                                                       
}                                                                                  
                                                                   
upstream chat {                                                                                                 
    server localhost:8081;                                                         
}      

server {
    listen 80;
    server_name i11b206.p.ssafy.io;

    # Redirect all HTTP requests to HTTPS
    if ($host = i11b206.p.ssafy.io) {
        return 301 https://$host$request_uri;
    }

    return 404;
}

server {
    listen 443 ssl;
    server_name i11b206.p.ssafy.io;

    ssl_certificate /etc/letsencrypt/live/i11b206.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/i11b206.p.ssafy.io/privkey.pem;

    location / {
        proxy_pass http://frontend;
	proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
	proxy_pass http://backend/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /chat {
        proxy_pass http://chat;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
